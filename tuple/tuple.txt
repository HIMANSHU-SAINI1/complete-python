tuple is same as list.just it can't be immutable.

creation method:

t1=(1,2,3,4,5)
t2=tuple(iteration)
t3=()
t4=(3,)  :for containing single element
t5=10,11,12,13,14   :by default brackets not requiered



tuple comprehensions and methods:

t=(*(exp for item in iterable),)
example:
t=(*(x for x in range(1,5)),)



indexing and slicing:
t1=(1,2,3,4,5,6,7)
indexing: 
    t1[4] or t1[-3]

slicing:
    t1[:]   all index
    t1[2:]   slicing from index 2
    t1[2:5]   slicing from index to index 5 but doesnot count index 5
    t1[::]   it will give entire tuple



packing and unpacking:
    concatenation/repetition/packing unpacking/membership(in,not in)

    concatenation: 
            t1=(1,2,3)
            t2=(8,9,10)
            t3=t1+t2
    repetition:
            t1=(1,2,3)
            t2=t1*3
    packing unpacking:
            
            t1=1,2,3,4,5  # it will pack the multiple values and make it tuple
            a,b,c,d,e=t1  # tuple will assign the value (unpack)to different variables just remember the variables and values in tuple should be same
            if still want to assign to lesser value put * 
                        a,b,*c=t1 #c will added the rest values as an list
    membership:
            in/not in                 